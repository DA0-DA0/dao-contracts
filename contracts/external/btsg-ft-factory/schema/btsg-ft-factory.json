{
  "contract_name": "btsg-ft-factory",
  "contract_version": "2.5.1",
  "idl_version": "1.0.0",
  "instantiate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "InstantiateMsg",
    "type": "object",
    "additionalProperties": false
  },
  "execute": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "ExecuteMsg",
    "oneOf": [
      {
        "description": "Issues a new fantoken.",
        "type": "object",
        "required": [
          "issue"
        ],
        "properties": {
          "issue": {
            "$ref": "#/definitions/NewFanToken"
          }
        },
        "additionalProperties": false
      }
    ],
    "definitions": {
      "InitialBalance": {
        "type": "object",
        "required": [
          "address",
          "amount"
        ],
        "properties": {
          "address": {
            "type": "string"
          },
          "amount": {
            "$ref": "#/definitions/Uint128"
          }
        },
        "additionalProperties": false
      },
      "NewFanToken": {
        "type": "object",
        "required": [
          "initial_balances",
          "max_supply",
          "name",
          "symbol",
          "uri"
        ],
        "properties": {
          "initial_balances": {
            "description": "The initial balances to set for the token, cannot be empty.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/InitialBalance"
            }
          },
          "initial_dao_balance": {
            "description": "Optional balance to mint for the DAO.",
            "anyOf": [
              {
                "$ref": "#/definitions/Uint128"
              },
              {
                "type": "null"
              }
            ]
          },
          "max_supply": {
            "description": "Fan token max supply.",
            "allOf": [
              {
                "$ref": "#/definitions/Uint128"
              }
            ]
          },
          "name": {
            "description": "Fan token name.",
            "type": "string"
          },
          "symbol": {
            "description": "Fan token symbol.",
            "type": "string"
          },
          "uri": {
            "description": "Fan token URI.",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Uint128": {
        "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
        "type": "string"
      }
    }
  },
  "query": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "QueryMsg",
    "type": "string",
    "enum": []
  },
  "migrate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "MigrateMsg",
    "type": "object",
    "additionalProperties": false
  },
  "sudo": null,
  "responses": {}
}
